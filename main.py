import time
from datetime import datetime
from random import choice

import disnake
import requests
from disnake import FFmpegPCMAudio, PCMVolumeTransformer
from disnake.ext import commands
from disnake.utils import get
from flask import request
from youtube_dl import YoutubeDL

from background import keep_alive
from config import (
    ACTIVE,
    ALLOWED_CHANNELS,
    BOTICON_URL,
    GUILD_ID,
    SERVERICON_URL,
    TOKEN,
)

bot = commands.Bot(command_prefix='/', help_command=None,
                   intents=disnake.Intents.all(), test_guilds=GUILD_ID)
queue = []

# class TicTakToe(disnake.ui.View):

#  def __init__(self):
#    super().__init__(timeout=60)
#    self.value = str

#  @disnake.ui.button(emoji="‚≠ï", style=disnake.ButtonStyle.blurple)
#  async def nolik(self, button: disnake.ui.Button, interaction: disnake.CommandInteraction):
#    self.value = "‚≠ï"
#    self.stop()


#  @disnake.ui.button(emoji="‚ùå", style=disnake.ButtonStyle.blurple)
#  async def krestik(self, button: disnake.ui.Button, interaction: disnake.CcommandInteraction):
#    self.value = "‚ùå"
#    self.stop()

#  @disnake.ui.button(emoji="üü¶", style=disnake.ButtonStyle.blurple)
#  async def empty(self, button: disnake.ui.Button, interaction: disnake.CcommandInteraction):
#    self.value = "üü¶"
#    self.stop()

@bot.event
async def on_ready():
    print(f'[{time.asctime(time.localtime(time.time()))}] BOT {
          bot.user} is ready to assist you!')
    await bot.change_presence(status=disnake.Status.online, activity=disnake.Game(name='–£—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∂–∏–∑–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞', platform='Discord'))


@bot.event
async def on_slash_command_error(inter, error):
    print(error)
    smile = choice(['‚ö°', 'üöÄ', '‚è±Ô∏è', 'üî•', 'üèÉ', 'üèéÔ∏è', 'üèçÔ∏è', 'üíØüî•', 'üòé', 'üéâ'])
    if isinstance(error, commands.CommandOnCooldown):
        await inter.response.send_message(ephemeral=True, embed=disnake.Embed(title=f"–í—ã —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä—ã–π! {smile}", description=f"–ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â—ë {int(error.cooldown.get_retry_after())} —Å–µ–∫—É–Ω–¥ –¥–æ —Å–ª–µ–¥—É–π—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏!", color=0xFF0000), delete_after=5)
    elif isinstance(error, commands.MissingPermissions):
        await inter.response.send_message(ephemeral=True, embed=disnake.Embed(title="–£ –í–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", color=0xFF0000))
    elif isinstance(error, commands.ChannelNotReadable):
        await inter.response.send_message(ephemeral=True, embed=disnake.Embed(title="–£ –í–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!", color=0xFF0000))


@bot.slash_command(default_member_permission=disnake.Permissions.use_application_commands,
                   description="–í—ã–≤–æ–¥–∏—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–æ–º –∏ —Å–µ—Ä–≤–µ—Ä–æ–º",
                   dm_permission=False,
                   name="gf_ping")
@commands.cooldown(1, 20, type=commands.BucketType.default)
async def ping(inter, arg: str = "both"):

    if inter.channel.id not in ALLOWED_CHANNELS:
        raise commands.ChannelNotReadable(inter.channel)

    match arg:
        case 'both':
            t = time.time()
            embedExample = disnake.Embed(
                title="Pong! –û–∂–∏–¥–∞–Ω–∏–µ –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–æ–º –∏ —Å–µ—Ä–≤–µ—Ä–æ–º...")
            tempMessage = await inter.channel.send(embed=embedExample)
            ping = round(((time.time() - t) * 1000), 0)
            await tempMessage.delete()
            embedExample = disnake.Embed(
                title=':ping_pong: PONG!', color=0x7FFF00)
            embedExample.set_footer(
                text="–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã Discord –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–Ω—É—é –∏–ª–∏ –≤—ã—Å–æ–∫—É—é –∑–∞–¥–µ—Ä–∂–∫—É",
                icon_url=SERVERICON_URL)
            embedExample.add_field(
                name="**–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:**", value=f"```{int(bot.latency * 1000)} ms```")
            embedExample.add_field(
                name="**–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ–º:**", value=f"```{int(ping)} ms```")
            await inter.response.send_message(embed=embedExample, delete_after=5)
            return
        case 'message':
            t = time.time()
            embedExample = disnake.Embed(
                title="Pong! –û–∂–∏–¥–∞–Ω–∏–µ –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–æ–º –∏ —Å–µ—Ä–≤–µ—Ä–æ–º...")
            tempMessage = await inter.channel.send(embed=embedExample)
            ping = round(((time.time() - t) * 1000), 0)
            await tempMessage.delete()
            embedExample = disnake.Embed(
                title=':ping_pong: PONG!', color=0x7FFF00)
            embedExample.set_footer(
                text="–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã Discord –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–Ω—É—é –∏–ª–∏ –≤—ã—Å–æ–∫—É—é –∑–∞–¥–µ—Ä–∂–∫—É",
                icon_url=SERVERICON_URL)
            embedExample.add_field(
                name="**–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ–º:**", value=f"```{int(ping)} ms```")
            await inter.response.send_message(embed=embedExample, delete_after=5)
            return
        case 'latency':
            embedExample = disnake.Embed(
                title=':ping_pong: PONG!', color=0x7FFF00)
            embedExample.set_footer(
                text="–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã Discord –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–Ω—É—é –∏–ª–∏ –≤—ã—Å–æ–∫—É—é –∑–∞–¥–µ—Ä–∂–∫—É",
                icon_url=SERVERICON_URL)
            embedExample.add_field(
                name="**–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:**", value=f"```{int(bot.latency * 1000)} ms```", inline=True)
            tempMessage = await inter.response.send_message(embed=embedExample, delete_after=5)
            return

    await inter.response.send_message(ephemeral=True, embed=disnake.Embed(title="{0} is not a valid argument!".format(arg), color=0xFF0000), delete_after=7)
    await inter.message.delete()


@bot.slash_command(default_member_permission=disnake.Permissions.use_application_commands,
                   description="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç –±–æ—Ç–∞ –∫ –≤–∞—à–µ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ",
                   dm_permission=False,
                   name="gf_join")
@commands.cooldown(1, 20, type=commands.BucketType.default)
async def gf_join(inter):

    if inter.channel.id not in ALLOWED_CHANNELS:
        raise commands.ChannelNotReadable(inter.channel)

    if (inter.author.voice):
        if not (inter.guild.voice_client):
            await inter.author.voice.channel.connect()
            await inter.response.send_message(embed=disnake.Embed(
                title="–ë–æ—Ç –±—ã–ª –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!", color=0x7FFF00))
        else:
            await inter.response.send_message(ephemeral=True, embed=disnake.Embed(
                title="–ë–æ—Ç —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", color=0xFF0000))
    else:
        await inter.response.send_message(ephemeral=True, embed=disnake.Embed(
            title="–í—ã –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", color=0xFF0000))


@bot.slash_command(default_member_permission=disnake.Permissions.use_application_commands,
                   description="–í—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –±–æ—Ç–∞ –∏–∑ –≤–∞—à–µ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã",
                   dm_permission=False,
                   name="gf_disconnect")
@commands.cooldown(1, 20, type=commands.BucketType.default)
async def gf_disconnect(inter, force: bool = False):

    if inter.channel.id not in ALLOWED_CHANNELS:
        raise commands.ChannelNotReadable(inter.channel)

    if (inter.guild.voice_client):
        if (force or inter.author.voice):
            await inter.guild.voice_client.disconnect()
            await inter.response.send_message(embed=disnake.Embed(
                title="–ë–æ—Ç –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞!", color=0x7FFF00))
        else:
            await inter.response.send_message(ephemeral=True, embed=disnake.Embed(
                title="–í—ã –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ —Å –±–æ—Ç–æ–º!", color=0xFF0000))
    else:
        await inter.response.send_message(ephemeral=True, embed=disnake.Embed(
            title="–ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", color=0xFF0000))


@bot.slash_command(default_member_permission=disnake.Permissions.use_application_commands,
                   description="–í—ã–≤–æ–¥–∏—Ç –≤—Ä–µ–º—è –¥–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞!",
                   dm_permission=True,
                   name="gf_remtime")
@commands.cooldown(1, 20, type=commands.BucketType.default)
async def gf_RemainingTime(inter, short: bool = True):

    if inter.channel.id not in ALLOWED_CHANNELS:
        raise commands.ChannelNotReadable(inter.channel)

    if (short):
        await inter.response.send_message(embed=disnake.Embed(title="üßë‚ÄçüéÑ –ù–æ–≤—ã–π –≥–æ–¥ –Ω–∞—Å—Ç—É–ø–µ—Ç <t:1735696080:R>! üéâ", color=0x87CEEB))
    if not short:
        embed = disnake.Embed(title="üßë‚ÄçüéÑ –ù–æ–≤—ã–π –≥–æ–¥!", color=0x87CEEB)
        embed.add_field(name="**–ù–∞—Å—Ç—É–ø–∏—Ç —á–µ—Ä–µ–∑:**",
                        value="<t:1735696080:R>", inline=True)
        embed.add_field(name="**–û—Ç—Å—á—ë—Ç –¥–æ:**",
                        value="<t:1735696080:F>", inline=True)
        await inter.response.send_message(embed=embed)


@bot.slash_command(default_member_permission=disnake.Permissions.use_application_commands,
                   description="Send Embed Message",
                   dm_permission=False,
                   name="gf_embed")
@commands.cooldown(1, 20, type=commands.BucketType.default)
async def gf_embed(inter, title: str = 'None', desc: str = 'None', color: int = 0x000000, authorname: str = 'None', authoricon: str = 'None', footertext: str = 'None', footericon: str = 'None'):

    date = datetime.now()
    month = date.month
    embed = disnake.Embed(title=(None if title == "None" else title), description=(
        None if desc == "None" else desc), color=int(color))

    # Default Author Name and Icon
    embed.set_author(name='GAMER ASSISTANT', icon_url=BOTICON_URL)

    if authorname != "None" or authoricon != "None":
        an, ai = False, False
        if authorname:
            an = True
        if authoricon:
            if authoricon.startswith('https://') or authoricon.startswith('http://'):
                if requests.get(authoricon).status_code == 200:
                    ai = True

        embed.set_author(name=(authorname if an else None),
                         icon_url=(authoricon if ai else None))

    # Default Footer Text and Icon
    embed.set_footer(text=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ "ùï≤ùñÜùñíùñéùñìùñå ùï±ùñäùñâùñäùñóùñÜùñôùñéùñîùñì" ({date.day} {("—è–Ω–≤–∞—Ä—è" if month == 1 else "—Ñ–µ–≤—Ä–∞–ª—è" if month == 2 else "–º–∞—Ä—Ç–∞" if month == 3 else "–∞–ø—Ä–µ–ª—è" if month == 4 else "–º–∞—è" if month == 5 else "–∏—é–Ω—è" if month ==
                     6 else "–∏—é–ª—è" if month == 7 else "–∞–≤–≥—É—Å—Ç–∞" if month == 8 else "—Å–µ–Ω—Ç—è–±—Ä—è" if month == 9 else "–æ–∫—Ç—è–±—Ä—è" if month == 10 else "–Ω–æ—è–±—Ä—è" if month == 11 else "–¥–µ–∫–∞–±—Ä—è")} {date.year} –≥–æ–¥–∞)', icon_url=SERVERICON_URL)

    if footertext != "None" or footericon != "None":
        ft, fi = False, False
        if footertext:
            ft = True
        if footericon:
            if footericon.startswith('https://') or footericon.startswith('http://'):
                if requests.get(footericon).status_code == 200:
                    fi = True

        embed.set_footer(text=(footertext if ft else None),
                         icon_url=(footericon if fi else None))

    await inter.response.send_message(ephemeral=True, embed=disnake.Embed(title="–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∏–∂–µ üëá", color=0x7FFF00))
    await inter.channel.send(embed=embed)


@bot.slash_command(default_member_permission=disnake.Permissions.use_application_commands,
                   description="Playing a music from YouTube videos!",
                   dm_permission=False,
                   name="gf_play")
@commands.cooldown(1, 20, type=commands.BucketType.default)
async def gf_play(inter, track: str):
    global queue

    if inter.channel.id not in ALLOWED_CHANNELS:
        raise commands.ChannelNotReadable(inter.channel)

    YDL_OPTIONS = {'format': 'bestaudio/best',
                   'noplaylist': 'True',
                   'verbose': 'True',
                   'postprocessors': [{
                       'key': 'FFmpegExtractAudio',
                       'preferredcodec': 'mp3',
                       'preferredquality': '192'}]
                   }
    FFMPEG_OPTIONS = {
        'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
        'options': '-vn'}

    if (inter.author.voice):
        if not (inter.guild.voice_client):
            await inter.author.voice.channel.connect()
            await inter.response.send_message(ephemeral=True, embed=disnake.Embed(
                title="–ë–æ—Ç –±—ã–ª –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!", color=0x7FFF00))
    else:
        await inter.response.send_message(ephemeral=True, embed=disnake.Embed(
            title="–í—ã –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", color=0xFF0000))
        return

    if track.startswith('https://www.youtube.com/watch?v') or track.startswith('https://youtu.be/'):
        queue.append(track)
        await inter.channel.send(embed=disnake.Embed(title="–°—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å —É—Å–ø–µ—à–Ω–æ!", color=0x45b3e0))

    md = requests.get(track)

    voice = disnake.utils.get(bot.voice_clients, guild=inter.guild)

    await inter.channel.send(embed=disnake.Embed(description=f"### –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:\n## {song_name[0]}", color=0xFFFF00))

# @bot.slash_command(default_member_permission=disnake.Permissions.use_application_commands,
#   description="Playing a TicTacToe!",
#   dm_permission=True,
#   name="gf_tictactoe")
# @commands.cooldown(1, 40, type=commands.BucketType.default)
# async def gf_ticktactoe(inter, versus : str = 'bot'):
#  await inter.response.send_message(ephemeral=True, embed=disnake.Embed(title="–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! ‚≠ï‚ùå", color=0x45b3e0))
#  board = await inter.channel.send(embed=disnake.Embed(title="–ò–≥—Ä–æ–≤–∞—è –¥–æ—Å–∫–∞", color=0xFFFF00, comtent=[]))


# @bot.slash_command(default_member_permission=disnake.Permissions.use_application_commands,
#   description="Generate a greeting for New Year!",
#   dm_permission=False,
#   name="gf_greeting")
# async def gf_greeting(inter):
#  firstChoice = ['—Å –Ω–æ–≤—ã–º —Å—á–∞—Å—Ç—å–µ–º!', '365 –Ω–æ–≤—ã—Ö –¥–Ω–µ–π - 365 –Ω–æ–≤—ã—Ö —à–∞–Ω—Å–æ–≤!', '–Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫–∞–∂–¥—ã–º –µ–≥–æ –º–æ–º–µ–Ω—Ç–æ–º!', '–ø—Ä–∏–º–∏—Ç–µ –º–æ–∏ –∏—Å–∫—Ä–µ–Ω–Ω–∏–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è!', '–≥–æ–¥–æ–º –î—Ä–∞–∫–æ–Ω–∞üê≤!', '–Ω–æ–≤—ã–π —Å—Ç–∞—Ä—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–µ–≥–æ–¥–Ω—è!', '–∏ –ø—É—Å—Ç—å —Å–∞–º—ã–µ –ª—É—á—à–∏–µ —Å—é—Ä–ø—Ä–∏–∑—ã –±—É–¥—É—Ç —É –≤–∞—Å –≤–ø–µ—Ä–µ–¥–∏!']
#  secondChoice = [': –º–Ω–æ–≥–æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –∏ –ª—é–±–≤–∏, –ø—É—Å—Ç—å –∑–∞–¥—É–º–∞–Ω–Ω–æ–µ —Å–±—É–¥–µ—Ç—Å—è!', ', —á—Ç–æ–±—ã —ç—Ç–æ—Ç –≥–æ–¥ –ø–æ–¥–∞—Ä–∏–ª –º–Ω–æ–≥–æ –ø–æ–≤–æ–¥–æ–≤ –¥–ª—è —Ä–∞–¥–æ—Å—Ç–∏ –∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤!', ', —á—Ç–æ–±—ã –±—É–¥—É—â–∏–π –≥–æ–¥ –ø—Ä–∏–Ω–µ—Å —Å—Ç–æ–ª—å–∫–æ —Ä–∞–¥–æ—Å—Ç–µ–π, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –≥–æ–¥—É, –∏ —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–∞—Ä–∏–ª –≤–∞–º —É–ª—ã–±–∫—É –∏ —á–∞—Å—Ç–∏—á–∫—É –¥–æ–±—Ä–∞!', ': –≤–∞–º –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –≥–æ–¥–∞, –ø–æ–ª–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è!', ', —á—Ç–æ–±—ã üê≤–î—Ä–∞–∫–æ–Ω –ø—Ä–∏–Ω—ë—Å –≤ –≤–∞—à—É —Å–µ–º—å—é –ª—é–±–æ–≤—å, –Ω–µ–∂–Ω–æ—Å—Ç—å, –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —Å—á–∞—Å—Ç—å–µ!', ' –≤ –ù–æ–≤–æ–º –≥–æ–¥—É –±—ã—Ç—å –∑–¥–æ—Ä–æ–≤—ã–º–∏, –∫—Ä–∞—Å–∏–≤—ã–º–∏, –ª—é–±–∏–º—ã–º–∏ –∏ —É—Å–ø–µ—à–Ω—ã–º–∏!', ', —á—Ç–æ–±—ã —Å–±—ã–ª–æ—Å—å –≤—Å–µ —Ç–æ, —á—Ç–æ –≤—ã –ø–æ–∂–µ–ª–∞–ª–∏. –í—Å–µ —Ü–µ–ª–∏ –±—ã–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã, –∞ –ø–ª–∞–Ω—ã –ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω—ã. –í—Å—ë –ø–ª–æ—Ö–æ–µ –∏ –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ–µ –æ—Å—Ç–∞–ª–æ—Å—å –≤ —É—Ö–æ–¥—è—â–µ–º –≥–æ–¥—É!']
#  thirdChoice = ['–ù–æ–≤—ã–π –≥–æ–¥ –ø—Ä–∏–Ω–µ—Å—ë—Ç –º–Ω–æ–≥–æ —Ä–∞–¥–æ—Å—Ç–Ω—ã—Ö –∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö –¥–Ω–µ–π!', '–∫–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –º–∏–≥ –Ω–∞—Å—Ç—É–ø–∞—é—â–µ–≥–æ –≥–æ–¥–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç –≤ –¥–æ–º —Å—á–∞—Å—Ç—å–µ, –≤–µ–∑–µ–Ω–∏–µ, —É—é—Ç –∏ —Ç–µ–ø–ª–æ—Ç—É!', '–≤—Å—ë, —á—Ç–æ –º—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–±—É–¥–µ—Ç—Å—è!', '–Ω–∞—Å—Ç—É–ø–∞—é—â–∏–π –≥–æ–¥ —Å—Ç–∞–Ω–µ—Ç —Å–∞–º—ã–º –ø–ª–æ–¥–æ—Ç–≤–æ—Ä–Ω—ã–º –≥–æ–¥–æ–º –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏!', '–≥–æ–¥ –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —è—Ä–∫–∏—Ö –∫—Ä–∞—Å–æ–∫, –ø—Ä–∏—è—Ç–Ω—ã—Ö –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π –∏ —Ä–∞–¥–æ—Å—Ç–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π!', '—ç—Ç–æ—Ç –≥–æ–¥ –±—É–¥–µ—Ç –í–ê–®–ò–ú –≥–æ–¥–æ–º!', '–ù–æ–≤—ã–π –≥–æ–¥ –ø—Ä–∏–Ω–µ—Å—ë—Ç –≤—Å—ë, –æ —á—ë–º –≤—ã –º–µ—á—Ç–∞–µ—Ç–µ –∏ –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ!']
#  embed = disnake.Embed(title='–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π. –ö–æ–ø–∏—Ä—É–π –∏ –ø–æ–∑–¥—Ä–∞–≤–ª—è–π!', description=f"""
#  –î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫!
#  –° –Ω–æ–≤—ã–º –≥–æ–¥–æ–º –≤–∞—Å, {choice(firstChoice)}
#  –Ø –∂–µ–ª–∞—é –≤–∞–º{choice(secondChoice)}
#  –ò –ø—É—Å—Ç—å {choice(thirdChoice)}
#  """, color=0x00BFF)
#  embed.set_author(name='GAMER ASSISTANT', icon_url=BOTICON_URL)
#  date = datetime.now()
#  month = date.month
#  embed.set_footer(text=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ "ùï≤ùñÜùñíùñéùñìùñå ùï±ùñäùñâùñäùñóùñÜùñôùñéùñîùñì" ({date.day} {("—è–Ω–≤–∞—Ä—è" if month == 1 else "—Ñ–µ–≤—Ä–∞–ª—è" if month == 2 else "–º–∞—Ä—Ç–∞" if month == 3 else "–∞–ø—Ä–µ–ª—è" if month == 4 else "–º–∞—è" if month == 5 else "–∏—é–Ω—è" if month == 6 else "–∏—é–ª—è" if month == 7 else "–∞–≤–≥—É—Å—Ç–∞" if month == 8 else "—Å–µ–Ω—Ç—è–±—Ä—è" if month == 9 else "–æ–∫—Ç—è–±—Ä—è" if month == 10 else "–Ω–æ—è–±—Ä—è" if month == 11 else "–¥–µ–∫–∞–±—Ä—è")} {date.year} –≥–æ–¥–∞)', icon_url=SERVERICON_URL)
#  await inter.response.send_message(embed=embed)

if ACTIVE:
    keep_alive()
bot.run(TOKEN)

# with YoutubeDL(YDL_OPTIONS) as ydl:
#   ydl.download([queue[0]])

# voice.play(FFmpegPCMAudio(queue[0], FFMPEG_OPTIONS))
# voice_source = PCMVolumeTransformer(voice.source)
# voice_source.volume = 0.07

# song_name = name.rsplit('-', 2)
